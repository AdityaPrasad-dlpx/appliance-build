#
# Copyright 2018 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
- apt:
    name: delphix-virtualization
    state: present

- file:
    path: /var/opt/delphix
    state: directory

#
# The "product", "platform", and "cr_auth" fields are intentionally left
# out of this file, as those fields should get filled in by other roles
# that will run after this role.
#
- copy:
    dest: /var/opt/delphix/server.conf
    mode: 0644
    content: |
      [config]
      hostname=delphix
      disk=c?t0d0
      interface=vmxnet3s0
      primary_aggr_nic=vmxnet3s0
      type=ipv4
      method=dhcp
      ip=
      netmask=
      gateway=
      domain=
      dns1=
      dns2=

#
# Initial NFS Server configuration for virtualization. We do this here instead
# of within the virtualization package because the virtualization software
# modifies this configuration at runtime, and we don't want ansible roles that
# are re-run as part of upgrades to undo these runtime modifications.
#
- name: Link initial NFS configuration
  file:
    src: /opt/delphix/server/etc/nfs-kernel-server-v4
    dest: /etc/default/nfs-kernel-server
    force: yes
    owner: root
    group: root
    state: link

#
# Because we want an NFSv4-only configuration out of the box, we need to mask
# NFSv3 services so that they don't get automatically started at boot via
# dependencies. The virtualization software is responsible for unmasking and
# starting these services if NFSv3 needed at runtime.
#
- name: Mask NFSv3 services
  file:
    src: "/dev/null"
    dest: "/etc/systemd/system/{{ item }}"
    state: link
  with_items:
      - rpc-statd.service
      - rpcbind.service
      - rpcbind.socket
